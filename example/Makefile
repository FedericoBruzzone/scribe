.PHONY: help all compile_figs compile_main clean clean_pdf run_interactive

# default: all

NAME = main
FIGS_DIR = figs
FIGS = $(shell find ./$(FIGS_DIR) -type f -name '*.tex')

# =============== HELP ===============
help:
	@echo "Usage:"
	@echo "  make all                - compile all latex figures and main file"
	@echo "  make compile_latex_figs - compile all latex figures"
	@echo "  make compile_main       - compile main file"
	@echo "  make force_compile_main - force compile main file"
	@echo "  make clean              - clean all files generated by compilation"
	@echo "  make clean_pdf          - clean all files generated by compilation and pdf files"
	@echo "  make run_interactive    - run latexmk in interactive mode"

# =============== TARGETS ===============
all: clean compile_figs compile_main

compile_figs:
	$(foreach fig, $(FIGS), $(call compile_fig, $(fig));)

compile_main: $(NAME).tex
	$(call compile_main, $<)

force_compile_main: $(NAME).tex
	$(call force_compile_main, $<)

clean:
	$(call clean_main)
	$(call clean_figs)

clean_pdf:
	$(call clean_main_pdf)
	$(call clean_figs_pdf)

run_interactive: compile_figs
	latexmk -pdf -pvc -shell-escape -interaction=nonstopmode -file-line-error ./$(NAME).tex

print_figs_dir_and_basename:
	@echo $(FIGS_DIR)
	@echo $(basename $(FIGS))

# =============== COMPILING ===============
# pdflatex -shell-escape -interaction=nonstopmode -file-line-error ./$(NAME).tex
define pdflatex_cmd
	pdflatex -shell-escape -file-line-error -output-directory=$(dir $1) $1
endef

define bibtex_cmd
	bibtex $(basename $1)
endef

# The - (dash) before the command is to ignore the exit status of the command
define compile_fig
	-$(call pdflatex_cmd, $1)
	-$(call pdflatex_cmd, $1)
	-$(call pdflatex_cmd, $1)
endef

define compile_main
	-$(call pdflatex_cmd, $1)
	$(call bibtex_cmd, $1)
	-$(call pdflatex_cmd, $1)
	-$(call pdflatex_cmd, $1)
endef

define force_compile_main
	-pdflatex -shell-escape -interaction=nonstopmode -file-line-error -output-directory=$(dir $1) $1
	-bibtex $(basename $1)
	-pdflatex -shell-escape -interaction=nonstopmode -file-line-error -output-directory=$(dir $1) $1
	-pdflatex -shell-escape -interaction=nonstopmode -file-line-error -output-directory=$(dir $1) $1
endef

# =============== CLEANING ===============
define clean_latex
	rm -rf $(dir $1)*.aux $(dir $1)*.bbl $(dir $1)*.blg $(dir $1)*.log $(dir $1)*.out $(dir $1)*.spl $(dir $1)*.synctex.gz $(dir $1)*.toc $(dir $1)*.bcf $(dir $1)*.run.xml $(dir $1)*.nav $(dir $1)*.snm $(dir $1)*.vrb $(dir $1)*.fdb_latexmk $(dir $1)*.fls $(dir $1).$(NAME)-cache $(dir $1).$(NAME)-cache/
endef

define clean_figs
	$(foreach fig, $(FIGS), $(call clean_latex, $(fig));)
endef

define clean_main
	$(call clean_latex, $(NAME))
endef

define clean_figs_pdf
	$(foreach fig, $(FIGS), rm -rf $(basename $(fig)).pdf;)
endef

define clean_main_pdf
	rm -rf $(NAME).pdf
endef

